<style lang="less">
@import 'index.less';
</style>
<template>
  <view class="functionalZone">
    <lotusSearch searchBtnTxt="搜索商品" type="btn" @searchTabClick.user="searchTabClick"></lotusSearch>
    <!-- 轮播图 -->
    <view>
      <!-- <view class="functionalZone-container">
        <swiper autoplay="auto" interval="5000" duration="500" current="{{swiperCurrent}}" bindchange="swiperChange" class="functionalZone-container-swiper">
          <block wx:for="{{slider}}" wx:key="unique">
            <swiper-item data-id="{{item.id}}">
              <image src="{{item.picUrl}}" class="functionalZone-container-swiper-img"></image>
            </swiper-item>
          </block>
        </swiper>
        <view class="functionalZone-container-dots">
          <block wx:for="{{slider}}" wx:key="unique">
            <view class="functionalZone-container-dots-dot{{index == swiperCurrent ? ' active' : ''}}" bindtap="chuangEvent" id="{{index}}">{{index+1}}</view>
          </block>
        </view>
      </view> -->
      <view class="index-banner">
            <swiper autoplay="auto" interval="3000" duration="800" class="index-banner-swiper" indicator-active-color="#e93b3d" indicator-color="#e7e7e7" indicator-dots="{{circular}}" bindchange="swiperChange" circular="{{circular}}" previous-margin="20px" next-margin="20px">
                <repeat for="{{slider}}" index="index" item="item" key="index">
                    <swiper-item class="index-banner-swiper-item">
                        <view class="index-banner-item {{swiperCurrent === index?'index-banner-active':''}}">
                            <image class="index-banner-pic" src="{{item.picUrl}}" mode="scaleToFill"></image>
                        </view>
                    </swiper-item>
                </repeat>
            </swiper>
        </view>
    </view>
    <!-- 功能区 -->
    <view class="functionalZone-func">
      <view class="functionalZone-func-row">
        <repeat for="{{moduleData}}" item="item" key="index">
          <mview @mtap.user="toModule" class="functionalZone-func-mview {{item.type}} {{verify === 1 ? '' : 'no-verify'}}" :arg.sync="item">
            <view class="functionalZone-func-iconBtn" slot="content">
              <image class="icon" src="../../images/index/{{item.icon}}.svg"></image>
              <text class="text">{{item.name}}</text>
            </view>
          </mview>
        </repeat>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import lotusSearch from '../../components/search/lotusSearch'
import mview from '../../components/card/mview'
import {checkUserRegister} from '../../utils/checkUserStatus'
import index from './index/index.js'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '幻想乡'
  };
  data = {
    circular:true,
    slider: [
      {
        picUrl: 'https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=114184491,1505698036&fm=26&gp=0.jpg',
        id: 1
      },
      {
        picUrl: 'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=3269814997,770937622&fm=26&gp=0.jpg',
        id: 2
      },
      {
        picUrl: 'https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1147976155,4103057146&fm=26&gp=0.jpg',
        id: 3
      }
    ],
    moduleData: index.funcs,
    swiperCurrent: 0
  };
  components = {
    lotusSearch: lotusSearch,
    mview: mview
  };
  methods = {
    searchTabClick() {
      wx.navigateTo({
        url: '/pages/classify/searchGoods'
      })
    },
    //轮播图的切换事件
    swiperChange(e){
    //只要把切换后当前的index传给<swiper>组件的current属性即可
      this.swiperCurrent = e.detail.current;
    },
    //点击指示点切换
    chuangEvent(e){
      this.swiperCurrent = e.currentTarget.id;
    },
    // 功能区跳转
    toModule(item) {
      console.log(item)
      wx.navigateTo({
        url: `/pages/fucntioalZone/${item.url}`
      })
    }
  };
  onLoad(option) {
    // 关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages 获取当前的页面栈，决定需要返回几层。
    // 调用页面路由带的参数可以在目标页面的onLoad中获取。
    let pages = getCurrentPages()
    let loadPageRoute = pages[0].route
    console.log('loadPageRoute', loadPageRoute, option)
    checkUserRegister(loadPageRoute, option, true).then((response) => {
      console.log('response', response)
    })
  }
}
</script>
